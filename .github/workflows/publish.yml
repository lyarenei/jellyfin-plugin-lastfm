name: 'Publish Plugin'

on:
  release:
    types:
      - released
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup .NET
        uses: actions/setup-dotnet@6bd8b7f7774af54e05809fcc5431931b3eb1ddee # tag=v4.0.1
        with:
          dotnet-version: "8.0"

      - name: Build Jellyfin Plugin
        uses: oddstr13/jellyfin-plugin-repository-manager@9497a0a499416cc572ed2e07a391d9f943a37b4d # v1.1.1
        id: jprm
        with:
          dotnet-target: "net8.0"

      - name: Upload Artifact
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: build-artifact
          retention-days: 14
          if-no-files-found: error
          path: ${{ steps.jprm.outputs.artifact }}

  upload:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: build-artifact

      - name: Prepare GH Release Assets
        run: |-
          for file in ./*; do
            md5sum ${file#./} >> ${file%.*}.md5
            sha256sum ${file#./} >> ${file%.*}.sha256
          done
          ls -l

      - name: Upload GH Release Assets
        uses: shogo82148/actions-upload-release-asset@aac270e08f6b4547ada0b3800f88e1eb3ce9d400 # v1.7.7
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./*

      - name: Ensure Destination Path Exists
        uses: appleboy/ssh-action@029f5b4aeeeb58fdfe1410a5d17f967dacf36262 # v1.0.3
        if: ${{ contains(github.repository, 'lyarenei/') }}
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script_stop: true
          script: |-
            mkdir -p "/var/www/repos/jellyfin/${{ github.repository }}/${{ inputs.version }}" || exit 1

      - name: Upload Jellyfin Plugin Repository Assets
        uses: burnett01/rsync-deployments@796cf0d5e4b535745ce49d7429f77cf39e25ef39 # v7.0.1
        if: ${{ contains(github.repository, 'lyarenei/') }}
        with:
          switches: -vrptz
          path: ./*.zip
          remote_path: /var/www/repos/jellyfin/${{ github.repository }}/${{ inputs.version }}
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_key: ${{ secrets.DEPLOY_KEY }}

  publish:
    needs:
      - upload
    runs-on: ubuntu-latest
    if: ${{ contains(github.repository, 'lyarenei/') }}
    env:
      MANIFEST_FILE: "/var/www/repos/jellyfin/manifest.json"
      REPO_PATH: "/var/www/repos/jellyfin"
      REPO_URL: "https://repo.xkrivo.net/jellyfin"
    steps:
      - name: Update Plugin Manifest
        uses: appleboy/ssh-action@029f5b4aeeeb58fdfe1410a5d17f967dacf36262 # v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script_stop: true
          envs: MANIFEST_FILE,REPO_PATH,REPO_URL
          script: |-
            lockfile="/run/lock/jprm.lock"
            pushd "${REPO_PATH}/${{ github.repository }}/${{ inputs.version }}" || exit 1
            (
                flock -x 300
                python3.9 -m jprm --verbosity=debug repo add --url="${REPO_URL}" "${MANIFEST_FILE}" ./*.zip || exit 1
            ) 300>${lockfile}
            popd || exit 1
            rm -r "${REPO_PATH}/${{ github.repository }}/${{ inputs.version }}" || exit 1
