name: 'Build Plugin'

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Setup .NET
        uses: actions/setup-dotnet@c0d4ad69d8bd405d234f1c9166d383b7a4f69ed8 # tag=v2.1.0
        with:
          dotnet-version: "6.0.x"

      - name: Build plugin
        run: dotnet publish -c Release

      - name: Collect plugin binaries
        run: |
          mkdir -p /home/runner/work/plugin-binaries/10-7
          mkdir -p /home/runner/work/plugin-binaries/10-8
          pushd /home/runner/work/jellyfin-plugin-listenbrainz/jellyfin-plugin-listenbrainz/Jellyfin.Plugin.Listenbrainz/bin/Release/net5.0 && \
          cp Jellyfin.Plugin.Listenbrainz.dll /home/runner/work/plugin-binaries/10-7 && \
          popd
          pushd /home/runner/work/jellyfin-plugin-listenbrainz/jellyfin-plugin-listenbrainz/Jellyfin.Plugin.Listenbrainz.JF108/bin/Release/net6.0 && \
          cp Jellyfin.Plugin.Listenbrainz.dll /home/runner/work/plugin-binaries/10-8 && \
          popd

      - name: Upload built binaries
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3
        with:
          name: plugin_binaries
          retention-days: 14
          if-no-files-found: error
          path: /home/runner/work/plugin-binaries
