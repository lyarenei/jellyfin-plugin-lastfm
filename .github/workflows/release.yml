name: Release plugin

on:
  push:
    tags:
      - '2.[0-9]+.[0-9]+'
jobs:
  build:
    name: Build & create release of plugin
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Jellyfin.Plugin.Listenbrainz
    steps:
      - uses: little-core-labs/get-git-tag@v3.0.2
        id: tagName

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Read RELEASE.md and use it as a body of new release
        id: read_release
        working-directory: ./.github
        shell: bash
        run: |
          r=$(cat ./RELEASE.md)                             # <--- Read file
          r="${r//'%'/'%25'}"                               # Multiline escape sequences for %
          r="${r//$'\n'/'%0A'}"                             # Multiline escape sequences for '\n'
          r="${r//$'\r'/'%0D'}"                             # Multiline escape sequences for '\r'
          echo "RELEASE_BODY=$r" >> $GITHUB_OUTPUT          # <--- Set environment variable

      - name: Set up .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "6.0.x"

      - name: Build plugin
        run: |
          dotnet publish \
          -c Release \
          -o artifacts/ \
          -f net6.0

      - name: Create ZIP archive
        working-directory: ./Jellyfin.Plugin.Listenbrainz/artifacts
        run: zip plugin.zip Jellyfin.Plugin.Listenbrainz.dll

      - name: Create github release and attach plugin
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "./Jellyfin.Plugin.Listenbrainz/artifacts/plugin.zip"
          asset_name: "jellyfin_plugin_listenbrainz_${{ steps.tagName.outputs.tag }}.zip"
          tag: ${{ github.ref }}
          overwrite: true
          body: ${{ steps.read_release.outputs.RELEASE_BODY }}
